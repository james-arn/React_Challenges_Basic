{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["ToDoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","onSubmit","e","preventDefault","id","Math","floor","random","text","value","type","name","placeholder","onChange","target","ref","ToDo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","className","isComplete","onClick","ToDoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAwCeA,EAtCE,SAACC,GACd,MAA2BC,mBAAS,IAApC,mBAAQC,EAAR,KAAeC,EAAf,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAiBrB,OACE,uBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBACFX,EAAMS,SAAS,CACXG,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMd,IAGVC,EAAS,KAIT,UACE,uBACEc,MAAOf,EACPgB,KAAK,OACLC,KAAK,OACLC,YAAY,gBACZC,SArBiB,SAAAX,GACjBP,EAASO,EAAEY,OAAOL,QAqBlBM,IAAKnB,IAEP,kD,OCESoB,EAhCF,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAC7C,EAAwB3B,mBAAS,CAC7BW,GAAI,KACJK,MAAO,KAFX,mBAAOY,EAAP,KAAaC,EAAb,KAaJ,OAAID,EAAKjB,GACE,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SATZ,SAAAQ,GACjBW,EAAWC,EAAKjB,GAAIK,GACpBa,EAAQ,CACJlB,GAAI,KACJK,MAAO,QAQRQ,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACjB,sBAAKC,UAAaF,EAAKG,WAAa,oBAAqB,WAAzD,UACI,qBAAmBC,QAAS,kBAAMV,EAAaM,EAAKpB,KAApD,SACCoB,EAAKhB,MADIgB,EAAKpB,IAGf,gCACI,wBAAQwB,QAAS,kBAAMT,EAAWK,EAAKpB,KAAvC,oBACA,wBAAQwB,QAAS,kBAAMN,EAAQ,CAAClB,GAAIoB,EAAKpB,GAAIK,MAAOe,EAAKhB,QAAzD,uBANkEiB,OC6B3DI,MAjDf,WACA,MAA0BpC,mBAAS,IAAnC,mBAAOwB,EAAP,KAAca,EAAd,KAsCA,OACQ,gCACI,4DACA,cAAC,EAAD,CAAU7B,SAvCN,SAAAuB,GAEZ,GAAIA,EAAKhB,OAAQ,QAAQuB,KAAKP,EAAKhB,MAAnC,CAGA,IAAMwB,EAAQ,CAAIR,GAAJ,mBAAaP,IAE3Ba,EAASE,OAiCD,cAAC,EAAD,CAAMf,MAAOA,EAAOC,aAhBX,SAAAd,GACjB,IAAI6B,EAAehB,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKpB,KAAOA,IACZoB,EAAKG,YAAcH,EAAKG,YAErBH,KAEXM,EAASG,IAS+Cd,WAtBzC,SAAAf,GACf,IAAM8B,EAAa,YAAIjB,GAAOkB,QAAO,SAAAX,GAAI,OAAIA,EAAKpB,KAAOA,KACzD0B,EAASI,IAoBuEd,WA9BjE,SAACgB,EAAQC,GACpBA,EAAS7B,OAAQ,QAAQuB,KAAKM,EAAS7B,OAI3CsB,GAAS,SAAAQ,GAAI,OAAIA,EAAKf,KAAI,SAAAgB,GAAI,OAAGA,EAAKnC,KAAOgC,EAASC,EAAWE,eCVtDC,EAPH,WACZ,OACA,8BACE,cAAC,EAAD,OCHFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e64ad487.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst ToDoForm = (props) => {\r\n    const  [input, setInput] = useState(\"\");\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(()=>{\r\n      inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random()*1000),\r\n        text: input\r\n    });\r\n\r\n    setInput(\"\")\r\n};\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={input}\r\n        type=\"text\"\r\n        name=\"text\"\r\n        placeholder=\"Enter task...\"\r\n        onChange = {handleChange}\r\n        ref={inputRef}\r\n      />\r\n      <button>Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ToDoForm;\r\n","//single row in todo list.\r\nimport React, { useState } from \"react\";\r\nimport ToDoForm from \"./ToDoForm\";\r\n\r\n\r\nconst ToDo = ({ todos, completeTodo, removeTodo, updateTodo}) => {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: \"\"\r\n    })\r\n\r\nconst submitUpdate = value => {\r\n    updateTodo(edit.id, value)\r\n    setEdit({\r\n        id: null,\r\n        value: \"\",\r\n    })\r\n}\r\n\r\nif (edit.id) {\r\n    return <ToDoForm edit={edit} onSubmit={submitUpdate} />\r\n}\r\n\r\nreturn todos.map((todo, index) => (\r\n<div className = {todo.isComplete ? 'todo-row complete': 'todo-row'} key={index}>\r\n    <div key={todo.id} onClick={() => completeTodo(todo.id)}> \r\n    {todo.text}\r\n    </div>\r\n    <div>\r\n        <button onClick={() => removeTodo(todo.id)}>Delete</button>\r\n        <button onClick={() => setEdit({id: todo.id, value: todo.text})}>Edit</button>\r\n    </div>\r\n\r\n</div>\r\n));\r\n}\r\n\r\nexport default ToDo;","import { useState } from \"react\";\r\nimport ToDo from \"./ToDo\";\r\nimport ToDoForm from \"./ToDoForm\";\r\n\r\nfunction ToDoList() {\r\nconst [todos, setTodos] = useState([])\r\n\r\nconst addTodo = todo => {\r\n    // code below ensures big spaces don't show up\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n        return;\r\n    }\r\n    const newTodos = [todo, ...todos] \r\n\r\n    setTodos(newTodos)\r\n}\r\n\r\nconst updateTodo = (todoId, newValue) => {\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n        return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item=>(item.id === todoId ? newValue : item)));\r\n};\r\n\r\nconst removeTodo = id => {\r\n    const removeArr =  [...todos].filter(todo => todo.id !== id)\r\n    setTodos(removeArr);\r\n}\r\n\r\n\r\nconst completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n        if (todo.id === id) {\r\n            todo.isComplete = !todo.isComplete\r\n        }\r\n        return todo;\r\n    })\r\n    setTodos(updatedTodos);\r\n};\r\n\r\n\r\n\r\nreturn (\r\n        <div>\r\n            <h1>What's the plan for today?</h1>\r\n            <ToDoForm onSubmit={addTodo} />\r\n            <ToDo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;\r\n","import { useState } from \"react\";\n//components\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst App = () => {\nreturn (\n<div>\n  <ToDoList />\n</div>\n)};\n\nexport default App;\n\n// import { useState } from \"react\";\n\n// const App = () => {\n//   const [numbers, setNumbers] = useState([1, 2, 3, 4, 5, 6]);\n\n// const removeHandler = (index) => {\n//     let storedNum =[...numbers]\n//     storedNum.splice(index, 1)\n//     setNumbers(storedNum)\n// }\n\n//     return (\n//     <div>\n//       {numbers.map((number, index) => {\n//         return <h1 key = {index} onClick={() => removeHandler(index)}>{number} </h1>;\n//       })}\n\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// exmaple\n// import { useState } from \"react\";\n\n// const App = () => {\n//   const [numbers, setNumbers] = useState([1, 2, 3, 4]);\n\n//  const addHandler = () => {\n//     let storedNums = [...numbers];\n//     storedNums.push(storedNums[storedNums.length - 1] + 1);\n//     setNumbers(storedNums);\n//   };\n\n//   return (\n//     <div>\n//       {numbers.map((number, index) => {\n//         return <h1 key = {index}>{number}</h1>;\n//       })}\n//         <button onClick={addHandler}>add one</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// //USESTATE PRACTICE - function\n// import { useState } from \"react\";\n\n// const App = () => {\n//   const [count, setCount] = useState(0);\n\n//   return (\n//     <div>\n//       <h1>{count}</h1>\n//     <button onClick={()=> setCount(count + 1)}>add one</button>\n//     <button onClick={()=> setCount(count - 1)}>minus one</button>\n//     <button onClick={()=> setCount(count * 2)}>double</button>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// //NETFLIX\n// import { useState } from \"react\";\n// import netflix1 from \"../src/images/netflix1.PNG\"\n// import netflix2 from \"../src/images/netflix2.PNG\"\n// import netflix3 from \"../src/images/netflix3.PNG\"\n// import netflix4 from \"../src/images/netflix4.PNG\"\n// import netflix5 from \"../src/images/netflix5.PNG\"\n\n// const App = () => {\n//   const [contents, setContents] = useState([netflix1, netflix2, netflix3, netflix4, netflix5]);\n\n//   return (\n//     <div>\n//       {contents.map((contentMap, index) => {\n//         return <ContentMain key={index} contentMap={contentMap} />;\n//       })}\n//     </div>\n//   );\n// };\n// const ContentMain = (props) => {\n//   return (\n//     <div>\n//       <img src={props.contentMap}/>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n//BBC NEWS\n// import { useState } from \"react\";\n// import contentImage1 from \"../src/images/content_1.PNG\";\n// import contentImage2 from \"../src/images/content_2.PNG\";\n// import contentImage3 from \"../src/images/content_3.PNG\";\n// import contentImage4 from \"../src/images/content_4.PNG\";\n// const App = () => {\n//   const [contents, setContents] = useState([\n//     {\n//       Image: contentImage1,\n//       Title: \"Six ways Uk can save climate\",\n//       Desc: \"Information about somehting really important here\",\n//       Category: \"Category\",\n//     },\n//     {\n//       Image: contentImage2,\n//       Title: \"Why does a climate summit need 25k people?\",\n//       Desc: \"Information about somehting really important here\",\n//       Category: \"Category\",\n//     },\n//     {\n//       Image: contentImage3,\n//       Title: \"Can you stop Norway doing drilling oil that made it rich?\",\n//       Desc: \"Information about somehting really important here\",\n//       Category: \"Category\",\n//     },\n//     {\n//       Image: contentImage4,\n//       Title: \"What does this summit mean for us all?\",\n//       Desc: \"Information about somehting really important here\",\n//       Category: \"Category\",\n//     },\n//   ]);\n\n//   return (\n//     <div>\n//       {contents.map((contentMap, index) => {\n//         return <ContentMain key={index} contentMap={contentMap} />;\n//       })}\n//     </div>\n//   );\n// };\n// const ContentMain = (props) => {\n//   return (\n//     <div>\n//       <img src={props.contentMap.Image}/>\n//       <h4> {props.contentMap.Tile} </h4>\n//       <p> {props.contentMap.Desc} </p>\n//       <p> {props.contentMap.Category} </p>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// import \"./App.css\";\n// import LegalDrink from \"./components/LegalDrink\";\n\n// const App = () => {\n//   return (\n//   <div>\n//     <LegalDrink />\n//   </div>\n// )\n//   }\n\n//   export default App;\n\n// const App = () => {\n// const [persons, setPersons] = useState([\n//   {name: \"Leon\"},\n//   {name: \"Jordan\"}\n// ]);\n\n// const handleClick = (value) => {\n//   alert(value);\n// };\n\n// return (\n// <div>\n//   <Person name={persons[0].name} clickMe={handleClick} />\n//   <Person name={persons[1].name} clickMe={handleClick} />\n// </div>\n//   )\n// };\n\n// const Person = (props) => {\n// return <h1 onClick={() => props.clickMe(props.name)}>{props.name}</h1>;\n// };\n\n// export default App;\n\n// //DAY 1 CHALLENGES\n// import \"./App.css\";\n// import Footer from \"./components/Footer\";\n// import Jumbotron from \"./components/Jumbotron\";\n// import Navbar from \"./components/Navbar\";\n// import Carousel from \"./components/Carousel\";\n// import Content from \"./components/content\";\n\n// // MAIN Challenge 1, 2\n// const App = () => {\n// return (\n//   <div>\n//       <Navbar />\n//       <Jumbotron />\n//       <Carousel />\n//       <Content />\n//       <Footer />\n//   </div>\n// )\n// }\n\n// LECTURE Challenge 1 & 2\n// import image from \"./images/juniordev.jfif\"\n\n// const App = () => {\n//   return (\n//     <div>\n//       <Job role=\"Junior Developer\"/>\n//       <Image src />\n//     </div>\n//   );\n// };\n\n// const Job = (props) => {\n//   return <p> I'm a {props.role}. </p>;\n// };\n\n// const Image = (props) => {\n//   return <img src={image}/>;\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}